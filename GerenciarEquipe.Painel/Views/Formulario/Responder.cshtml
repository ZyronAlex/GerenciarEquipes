@using GerenciarEquipe.Services
@model PaginatedList<GerenciarEquipe.Painel.Models.RespostaModel>
@{
    ViewBag.Title = "Responder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<article class="content item-editor-page">
    <div class="title-block">
        <h3 class="title">
            Responder <span class="sparkline bar" data-type="bar"></span>
        </h3>
    </div>
    @foreach (var item in Model)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="card card-block">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => item.id_funcionario)
                    @Html.HiddenFor(model => item.id_meta)

                    <div class="form-group row">
                        @Html.LabelFor(model => item.meta, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => item.meta.descicao, new { htmlAttributes = new { @class = "form-control-range" } })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => item.funcionario, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => item.funcionario.nome, new { htmlAttributes = new { @class = "form-control-range" } })
                        </div>
                    </div>

                    @*<div class="form-group row">
                        @Html.LabelFor(model => item.autor, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.autor, new { htmlAttributes = new { @class = "form-control box" } })
                            @Html.ValidationMessageFor(model => item.autor, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group row">
                        @Html.LabelFor(model => item.resultado, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.resultado, new { htmlAttributes = new { @class = "form-control box" } })
                            @Html.ValidationMessageFor(model => item.resultado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if(item.meta.justifica)
                    {
                    <div class="form-group row">
                        @Html.LabelFor(model => item.justificativa, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.justificativa, new { htmlAttributes = new { @class = "form-control box" } })
                            @Html.ValidationMessageFor(model => item.justificativa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    }
                    <div class="form-group row">
                        @Html.LabelFor(model => item.create_at, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            <span class="form-control-range">@Html.ValueFor(model => item.create_at, "{0:dd/MM/yyyy}")</span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10 col-sm-offset-2">
                            @{
                                var buttonName = !Model.HasNextPage ? "salvar" : "Next";
                            }
                            @Html.ActionLink(buttonName, "Responder", "Formulario", new { respostaModel = item, id_meta = item.id_meta, pageIndex = Model.PageIndex + 1 }, new { @type = "submit", @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</article>