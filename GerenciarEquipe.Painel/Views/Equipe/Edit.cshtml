@model GerenciarEquipe.Painel.Models.FuncionarioModel

@{
    ViewBag.Title = "Equipe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<article class="content item-editor-page">
    <div class="title-block">
        <h3 class="title">
            Editando <span class="sparkline bar" data-type="bar"></span>
        </h3>
    </div>
    @using (Html.BeginForm("Edit", "Equipe", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="card card-block">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.ativo)

                <div class="form-group row">
                    @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-sm-10">
                        <div class="images-container">
                            <div class="image-container new">
                                <div class="image">
                                    <div class="file-upload-img" style="cursor: pointer;" title="Clique para inserir uma imagem">
                                        @Html.TextBoxFor(model => model.fotoFile, new { type = "file", accept = ".jpg,.jpeg,.png" })
                                        <label class="input-file wrap-badge" for="fotoFile">
                                            @if (Model.foto != null)
                                            {
                                                <img class="img-responsive img-toggle" src="@Html.DisplayFor(model => model.foto)" alt="updatefile" style="cursor: pointer;" title="Clique para inserir uma imagem">
                                            }
                                            else
                                            {
                                                <img class="img-responsive img-toggle" src="~/Image/plus-icon-33363.png" alt="updatefile" style="cursor: pointer;" title="Clique para inserir uma imagem">
                                            }
                                            <span class="upload-ok"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <label for="upload">
                                <span class="glyphicon glyphicon-folder-open" aria-hidden="true"></span>
                                @Html.TextBoxFor(model => model.fotoFile, new { type = "file", style = "display:none" })
                            </label>
                            @Html.ValidationMessageFor(model => model.fotoFile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control box" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control box" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control box", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.matricula, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.matricula, new { htmlAttributes = new { @class = "form-control box", @type = "number", @pattern = "^\\d+(\\.|\\,)\\d{2}$" } })
                        @Html.ValidationMessageFor(model => model.matricula, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.nascimento, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nascimento, new { htmlAttributes = new { @class = "form-control box", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.nascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.genero, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.genero, "Selecione um Genero", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control text-xs-right" } })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control text-xs-right" } })
                        @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.turno, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.turno, "Selecione um Truno", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.turno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.id_cargo, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_cargo, (IEnumerable<SelectListItem>)ViewBag.Cargo, "Selecione um Cargo", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.id_cargo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.id_loja, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_loja, (IEnumerable<SelectListItem>)ViewBag.Loja, "Selecione um Loja", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.id_loja, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-10 col-sm-offset-2">
                        <button type="submit" class="btn btn-primary">
                            Salvar
                        </button>
                        @Html.ActionLink("Cancelar", "Index", "Equipe", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    }
</article>
@section Scripts
{
    <script src="@Url.Content("~/Scripts/cidades-estados-1.4.js")"></script>
    <script language="JavaScript" type="text/javascript" charset="utf-8">
        new dgCidadesEstados({
            cidade: document.getElementById('cidade'),
            estado: document.getElementById('estado'),
            change: true
        })
    </script>
    <script src="@Url.Content("~/Scripts/image.js")"></script>
}