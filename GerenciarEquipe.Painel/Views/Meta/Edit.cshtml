@model GerenciarEquipe.Painel.Models.MetaModel

@{
    ViewBag.Title = "Meta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<article class="content item-editor-page">
    <div class="title-block">
        <h3 class="title">
            Editando <span class="sparkline bar" data-type="bar"></span>
        </h3>
    </div>
    @using (Html.BeginForm("Edit", "Meta", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="card card-block">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.create_at)
                @{
                    var Usuario = (GerenciarEquipe.Painel.Models.UsuarioModel)Session["usuario"];
                    if (Usuario is GerenciarEquipe.Painel.Models.FuncionarioModel)
                    {
                        @Html.HiddenFor(model => model.id_loja);
                    }
                }

                <div class="form-group row">
                    @Html.LabelFor(model => model.descicao, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descicao, new { htmlAttributes = new { @class = "form-control box" } })
                        @Html.ValidationMessageFor(model => model.descicao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.objetivo, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.objetivo, new { htmlAttributes = new { @class = "form-control box", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.objetivo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.unidade, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.unidade, "Selecione a Unidade", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.unidade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.referencia, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.referencia, "Selecione a Referencia", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.referencia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2 ">
                    @Html.LabelFor(model => model.tipo_meta, htmlAttributes: new { @class = "control-label text-xs-right" })
                    <a tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="@Html.DisplayNameFor(model => model.tipo_meta)" data-content="@ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "tipo_meta").FirstOrDefault().Description , @ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "tipo_meta").LastOrDefault().Description"><i class="fa  fa-align-right fa-question-circle"></i></a>
                    </div>
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.tipo_meta, "Selecione o Tipo da Meta", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.tipo_meta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.fonte, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fonte, new { htmlAttributes = new { @class = "form-control box" } })
                        @Html.ValidationMessageFor(model => model.fonte, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.grupo, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.grupo, "Selecione um Grupo", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.grupo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.peso, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.peso, new { htmlAttributes = new { @class = "form-control box" } })
                        @Html.ValidationMessageFor(model => model.peso, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.id_indicador, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_indicador, (IEnumerable<SelectListItem>)ViewBag.Indicador, "Selecione um Indicador", new { @class = "form-control box" })
                        @Html.ValidationMessageFor(model => model.id_indicador, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.terceiros, htmlAttributes: new { @class = "control-label text-xs-right" })
                    </div>
                    <div class="col-md-10">
                        <div class="form-check form-check-inline col-md-3">
                            <label>
                                <input type="checkbox" id="terceiros" name="terceiros" value="true" class="form-check-input checkbox" @if (Model.terceiros) { Write("checked=checked"); }>
                                <span class="form-check-label" for="terceiros"></span>
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.terceiros, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.justifica, htmlAttributes: new { @class = "control-label text-xs-right" })
                    </div>
                    <div class="col-md-10">
                        <div class="form-check form-check-inline col-md-3">
                            <label>
                                <input type="checkbox" id="justifica" name="justifica" value="true" class="form-check-input checkbox" @if (Model.justifica) { Write("checked=checked"); }>
                                <span class="form-check-label" for="justifica"></span>
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.justifica, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.cargoAmbitos, htmlAttributes: new { @class = "control-label text-xs-right" })
                        <a tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="@Html.DisplayNameFor(model => model.cargoAmbitos)" data-content="@ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "cargoAmbitos").FirstOrDefault().Description"><i class="fa  fa-align-right fa-question-circle"></i></a>
                    </div>
                    <div class="col-md-10">
                        @foreach (var item in ViewBag.CargoAmbitos)
                        {
                            <div class="form-check form-check-inline col-md-3">
                                <label>
                                    <input type="checkbox" id="@item.Text" name="cargoAmbitos" value="@item.Value" class="form-check-input checkbox" @if (item.Selected) { Write("checked=checked"); }>
                                    <span class="form-check-label" for="@item.Text"> @item.Text</span>
                                </label>
                            </div>
                        }
                        @Html.ValidationMessageFor(model => model.cargoAmbitos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.cargoInquiridos, htmlAttributes: new { @class = "control-label text-xs-right" })
                        <a tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="@Html.DisplayNameFor(model => model.cargoInquiridos)" data-content="@ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "cargoInquiridos").FirstOrDefault().Description"><i class="fa  fa-align-right fa-question-circle"></i></a>
                    </div>
                    <div class="col-md-10">
                        @*@Html.ListBoxFor(model => model.inquiridos, ViewBag.Cargo, new { @class = "form-control box" })*@
                        @foreach (var item in ViewBag.CargoInquiridos)
                        {
                            <div class="form-check form-check-inline col-md-3">
                                <label>
                                    <input type="checkbox" id="@item.Text" name="cargoInquiridos" value="@item.Value" class="form-check-input checkbox" @if (item.Selected) { Write("checked=checked"); }>
                                    <span class="form-check-label" for="@item.Text"> @item.Text</span>
                                </label>
                            </div>
                        }
                        @Html.ValidationMessageFor(model => model.cargoInquiridos, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Usuario is GerenciarEquipe.Painel.Models.AdminModel)
                {
                    <div class="form-group row">
                        @Html.LabelFor(model => model.id_loja, htmlAttributes: new { @class = "control-label col-md-2 text-xs-right" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.id_loja, (IEnumerable<SelectListItem>)ViewBag.Loja, "Selecione uma Loja", new { @class = "form-control box" })
                            @Html.ValidationMessageFor(model => model.id_loja, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group row">
                    <div class="col-sm-10 col-sm-offset-2">
                        <button type="submit" class="btn btn-primary">
                            Salvar
                        </button>
                        @Html.ActionLink("Cancelar", "Index", "Meta", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    }
</article>
